ID,Summary,Priority,JIRA,Product,Module,Overview,Fixes,Function,Language,Screenshot
A11Y001,Images Missing Alt Attributes,High,,Career Site (Client Facing),Global,"Our delivery developers and content authors, despite our best efforts to educate them, often forget to include an alt attribute on images. Adding an alt attribute, often called a ""null alt"", to decorative or non-essential images will effectively hide them from assistive technology, creating a more pleasant and less overwhelming experience. Missing alt attributes are also cited in internal and third-party accessibility audits, so by automating their inclusion, we eliminate both of these issues.",1. Look for images on page that do not contain an alt attribute and add one dynamically.,fixAltAttribute,NA,
A11Y002,Applied Filters Require Several UX/AX Improvements,High,,Career Site (Client Facing),Search Results,"Although a part of the Search Results module, the applied filter buttons at the top of the Search Results page have several issues that are being addressed with this fix. These buttons appear after certain filters are selected or specialized URLs are navigated to. The improvements include more intuitive accessible labels that include and better keyboard management. For example, when a filter is removed, the focus moves to the next adjacent button. If the last filter is removed, the focus shifts to the first search result. The fix also makes several improvements and adjustments to the ARIA used in this section. Note: May eventually merge this with fixSearchResults to keep related module issues together. ","1. Remove aria-labeledby from UL
2. Remove aria-hidden and aria-expanded and add aria-describedby and role to parent element (.search-results-option)
3. Add aria-label to each button that is not disabled. Include a better label that helps identify the functionality of the button.",fixAppliedFilter,Required,
A11Y003,Aria-describedby Pointing to Non-Existent IDs,Medium,,Career Site (Client Facing),Cookie Management,"Input elements on the Cookie Management page currently include aria-describedby attributes that reference non-existent IDs. If the ID is created later, such as post-validation, the aria-describedby attribute should only be present at that state. For now, we are simply removing this attribute, which may also be the recommended fix for the product team.","1. Remove aria-describedby=""cookieDescriptionIdAttr"" from each input element.",fixCookieManagement,NA,
A11Y004,"Data Collection Forms (Job Alert, Talent Community) Require (Many) UX/AX Improvements",High,,Career Site (Client Facing),Form (Job Alert),"Many of our data capture forms on the site, such as Job Alerts, have dozens of problems that impact users with disabilities. This fix will address all forms that currently have a class of ""data-form"". These fixes range in nature from addressing improper lableing, to improving validation, general clean-up, and more.","1. Remove the CSS asterisk (see init.scss) because it reads out to assistive tech (AT) when added via content property and include a span with aria-hidden on it so that it is not picked up by AT. New asterisk applied via CSS.
2. Remove ""role"" from field-validation-error (it's not needed).
3. All required fields should include aria-invalid=""false"" on page load.
4. The input-validation-error class is removed when leaving a field, but aria-invalid remains set to true, so we address this by listening for blur event.
5. It is customary to include more useful autocomplete attributes so that certain fields will show the contextual menu for easier input. Adding autocompletes for First Name, Family Name, and Email. For email we are also changing the type from ""text"" to ""email""
6. The ""Add"" button needs to be more explicit to AT so include ""Add Job Alert""
7. The keyword list requires a more accessible grouping to better identify it; adding proper role and accName, etc.
8. The file upload remove button is a link with an href hash. This is awful, so let's remedy it by replacing it with a button.
9. Adding an accName to textarea, removing iframe garbage, and moving captcha to end of form to address tab order. It should not exist before submit button.
10. The ""Sign Up"" button needs to be more explicit to AT.
11. The form message has an inline tabindex=""0"" on it. This is not ideal as messages that receive focus should only do so temporarily and not when user tabs back to it.
12. The form message close link should really be a button, but for now we'll simply add a role.
13. The Keyword Location field does not appear to have an aria-describedby on it when an error is returned, so we need to grab it from Keyword Category and dupe it here.
14. Now that we are including aria-invalid, we need to alter the values based on user input.",fixDataForm,Required,
A11Y005,Core Disclosure Functionality Placing aria-expanded on Incorrect Element,High,,Career Site (Client Facing),Global,"Some areas of our career sites utilize a class called ""expandable-parent"" that incorrectly applies the aria-expanded attribute to itself—the div or section to which the class is applied—instead of to the interactive element, typically a button, where it should actually exist. The aria-expanded attribute only conveys the state of the component (expanded or collapsed) when it is present on the interactive element that toggles it and not its parent element.

Currently, this default functionality can be found in the Seach Filters, though it may appear elsewhere. ","1. See if element is already open, set aria-expanded state to true if it is.
2. Remove aria-expanded from adjacent, non-interactive element.
3. New toggle functionality for newly added aria-expanded attribute.
4. Remove aria-expanded being added to adjacent, non-interactive element, by CS Core.",fixGlobalDisclosure,NA,
A11Y006,Iframe Element Improvements,Low,,Career Site (Client Facing),Global,"Like images, iframes often require additional information to convey a description of the content they contain. Ideally, this information would always be included, but until then, we can apply a fix to improve the situation. For example, YouTube videos, especially those in CMS-generated content, often lack a title attribute, so this fix will address that specifc issue.",1. Find YouTube embeds that may be missing the title attribute and add a generic one.,fixIframeElement,Required,
A11Y007,Input Element Improvements,Low,,Career Site (Client Facing),Global,"Many input elements that are checkboxes also contain an attribute called autocomplete. Since autocompete invalidates on these kinds of inputs, we need to remove the attribute. This fix may also address other kinds of common input issues in the future.","1. Input elements with type of ""checkbox"" should not contain autocomplete as it is not a text or select field, so we need to remove.",fixInputElements,NA,
A11Y008,Job Description Improvements,High,,Career Site (Client Facing),Job Details,"CMS-generated content can produce a lot of  access barriers and broken code, so this fix seeks to address several common issues found in ATS job descriptions.","1. Remove tabindex attribute from elements within .ats-description that have tabindex attribute not equal to ""0"" or starting with ""-"".
2. Add role=""presentation"" to tables within .ats-description
3. Remove useless attributes from all elements within .ats-description
4.  Remove <font> element and unwrap its contents within .ats-description",fixJobDescription,NA,
A11Y009,Job List Improvements,Medium,,Career Site (Client Facing),Job List,"Job Lists links should have the associated location appear as a child text node within them, so that each link can be more descriptive and discernable from other jobs within the list that may contain the same job title.",1. Move location in into Job List link.,fixJobList,NA,
A11Y010,Job Location Page Improvements,High,,Career Site (Client Facing),Job Location Map,"The form on the Job Location page has several issues that this fix addresses. Keyboard users find the map difficult to navigate. To address this, it has been suggested to provide a link to access the equivalent map on Google.com, which is more accessible for keyboard and assistive technology users. Additionally, the primary heading, ""Job Location,"" should specify the exact location being sought.","1. Job map links should really be buttons, not links. Including role=""button"" for now, but we need to add spacebar key support eventually.
2. Links should never open in new windows without an exceptional reason, so removing target attribute.",fixJobLocation,NA,https://app.screencast.com/GvvBKMIwzsuwM
A11Y011,Save Job Button Improvements,High,,Career Site (Client Facing),Global,"The ""Save Job"" button used across several components are not accessible. When activated, the button needs to convey a ""pressed"" state to assistive technologies, indicating whether the button has been activated or not. The button should consistently display ""Save Job"" to ensure clarity when used together with aria-pressed. Using text to toggle between ""Save Job"" and ""Job Saved"" is ineffective and wrought with accessibility issues. Therefore, when aria-label is applied, which is also scripted in. it should take precedence over the child text being toggled and displayed. On this last point, hearing one thing and seeing another may still fail WCAG but the experience is still much improved. Develoeprs and designers should be incouraged not to toggle text to convey state.","1. Custom label needed to override the text toggle that delivery often adds (or removes). Text changes should never be used to convey state.
2. iOS, NVDA bug, state not reading back so need to implicitly add a role of ""button"" and remove type attribute. Do not remove until support better.
3. aria-pressed required, which will properly convey state of the button.",fixSaveJobButton,Required,
A11Y012,Basic Search Form Improvements,High,,Career Site (Client Facing),Search Form,"The basic Search Form has several issues, particularly with the validation of the ""Locations"" field in how it relates to keyboard use. When an invalid location is entered, focus should return to the Location field instead of being placed on the error itself. This ensures that screen reader users hear the error message beneath it and can tab forward after correcting the error, rather than tabbing backwards if focus is on the error message itself. Additionally, the aria-hidden attribute should be removed from the ""Location Pin"" button. Currently, this fix is only applied to the basic search form. A new function will eventually be created for the Advanced Search Form, which has similar issues.","1. Our primary search form should include a distinct role so that it can aid in helping assistive technology users navigate the page, so adding role=""search""
2. Our primary search form should provide a better group description for the fields at hand. This can be achieved by adding a div with a class of ""job-search-legend"" (a heading should not be used) and the following script will take care of adding any needed associations by either adding aria-describedby or aria-label, with appropriate IDs.
3. The way in which the validation is currently handled requires improvement to aid those using assistive technology and keyboard. Here we need to include aria-invalid and aria-describedby to the locations field and apply custom validation as well, so that keyboard users do not need to tab backwards to return to the locations field, which is initiating the error.
4. Apply a unique ID to the error message. This is what locations field will read when focus is brought back to it, thanks to aria-describedby.
5. When search button is pressed, fire off custom validation. 
6. Remove aria-hidden from the location pin. Often this is visually displayed, but aria-hidden is still present.",fixSearchForm,NA,
A11Y013,Search Filter Improvements,High,,Career Site (Client Facing),Search Filters,"The Search Filters section requires some improvments to help aid in the understanding of the controls. For example, checkboxes should always be properly grouped, for starters.","1. Add role and accName to Search Filter section. 
2. Each section element (`.expandable`) should contain a role of ""group"" as well as an accName. We will need to add an ID to each button for aria-labelledby.",fixSearchResults,NA,
A11Y014,Search Results Section Missing Tabindex,Medium,,Career Site (Client Facing),Search Results,"The Search Results section appears to be missing a tabindex, so this fix will add one.","1. When tabindex 0 was removed, visible focus is now lost. Product team should be applying tabindex -1 in addition to focus.",fixSearchResults,NA,
A11Y015,Search Results Pagination Improvements,Medium,,Career Site (Client Facing),Search Results,"The Search Results pagination has several issues that need to be addressed. Since the pagination is enclosed in a nav element, it should be properly labeled. This is important if other nav elements exist on the page. Additionally, the ""Next"" and ""Previous"" links should be hidden on the first and last pages to avoid any confusion, as they lead nowhere and are improperly hidden from assistive technology. Note: May eventually merge this with fixSearchResults to keep related module issues together. ","1. Pagination(s) in Search Results should really have an accName so it can be differentiated between other nav elements that may exist on page.
2. Search Results pagination disabled button can be tabbed to (this is bad). To address this, we simply remove href. When removed, aria-hidden is not really needed, so we remove that, too!",fixSearchPagination,Required,
A11Y016,Job Location and Job Category Module Headings Contain Tabindexes,Medium,,Career Site (Client Facing),Job Location,"The Sitemap page contains certain headings that include `tabindex` and `aria-expanded` attributes, as well as the `.expandable-parent` class. Non-interactive elements should never contain these. When we do have need to include interactive components in our product, we should be using elements like `button`. This issues appears to impact modules like ""Job Location"" and ""Job Category,"" which are commonly found on the Sitemap page. 

**TODO:** If this function is still required, consider breaking out into new functions to reflect specific modules they are associated with, rather than the Sitemap page.","1. Remove `tabindex`, `aria-expanded`, and `.expandable-parent` from `.job-location h2` and `.job-category h2` element.",fixSitemap,NA,
A11Y017,Social Share Links That Open In New Windows Require Helper Text,High,,Career Site (Client Facing),Social Share,The Social Media Share links on most job description pages open in new windows. We need to include helper text to inform assistive technology users of this behavior.,"1. Append the following element and helper text, `<span class=""wai visually-hidden"">(Opens in new tab)</span>`, to each `.social-share-items a` element.",fixSocialShare,Required,